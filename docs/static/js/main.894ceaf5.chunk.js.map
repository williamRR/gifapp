{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","handleInputChange","useCallback","e","target","value","handleSubmit","preventDefault","shouldButtonBeDisabled","text","onSubmit","type","onChange","disabled","GifItem","title","url","className","src","alt","parseData","array","map","id","images","fixed_width_downsampled","useFetchGifs","category","data","loading","state","setState","useEffect","axios","get","process","then","res","catch","err","console","log","getGifs","gifs","setTimeout","GifGrid","gif","GifExpertApp","categories","handleAddCategorie","newCat","cat","index","dotenv","config","ReactDOM","render","document","getElementById"],"mappings":"uMAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAGnCC,EAAoBC,uBAAY,SAACC,GACrCH,EAAcG,EAAEC,OAAOC,SACtB,IAEGC,EAAeJ,uBACnB,SAACC,GACCA,EAAEI,iBACFV,EAAcE,GACdC,EAAc,MAEhB,CAACD,EAAYF,IAGTW,EAAyBN,uBAAY,SAACO,GAC1C,MAAgB,KAATA,IACN,IAEH,OACE,uBAAMC,SAAUJ,EAAhB,UACE,uBAAOK,KAAK,OAAON,MAAON,EAAYa,SAAUX,IAChD,wBAAQY,SAAUL,EAAuBT,GAAaY,KAAK,SAA3D,yB,QChBSG,EARC,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACxB,OACE,qBAAKC,UAAU,yCAAf,SACE,qBAAKC,IAAKF,EAAKG,IAAKJ,O,iBCWbK,EAAY,SAACC,GAiBxB,OAhBeA,EAAMC,KACnB,YAOE,MAAO,CACLC,GAFE,EALJA,GAQER,MAHE,EAJJA,MAQEC,IAJE,EAHJQ,OACEC,wBAA2BT,SCnBtBU,EAAe,SAACC,GAAc,IAAD,EACd7B,mBAAS,CACjC8B,KAAM,GACNC,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,YDPW,SAACL,GACtB,OAAOM,IACJC,IADI,UACGC,6FADH,OACsCR,IAC1CS,MAAK,SAACC,GAAS,IAEJT,EACNS,EADFT,KAAQA,KAEV,OAAOR,EAAUQ,MAElBU,OAAM,SAACC,GACNC,QAAQC,IAAIF,OCFdG,CAAQf,GAAUS,MAAK,SAACO,GACtBC,YAAW,WACTb,EAAS,CAAEH,KAAMe,EAAMd,SAAS,MAC/B,UAEJ,CAACF,IAEGG,GCSMe,EAtBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,EACAD,EAAaC,GAA/BgB,EADkB,EACxBf,KAAYC,EADY,EACZA,QAEpB,OACE,qCACE,oDAAuBF,EAAvB,OACA,uBAECE,GACC,mBAAGZ,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,gBAAf,SACG0B,EAAKrB,KAAI,SAACwB,GACT,OAAO,cAAC,EAAD,eAA0BA,GAAZA,EAAIvB,SAG7B,2BCjBOwB,EAAe,WAAO,IAAD,EACIjD,mBAAS,IADb,mBACzBkD,EADyB,KACbnD,EADa,KAG1BoD,EAAqB/C,uBACzB,SAACgD,GACCrD,EAAc,CAACqD,GAAF,mBAAaF,OAE5B,CAACA,IAGH,OACE,qCACE,8CACA,uBACA,cAAC,EAAD,CAAanD,cAAeoD,IAC5B,6BACGD,EAAW1B,KAAI,SAAC6B,EAAKC,GACpB,OAAO,cAAC,EAAD,CAAmBzB,SAAUwB,GAAfA,Y,uBCf/BE,IAAOC,SACPC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.894ceaf5.chunk.js","sourcesContent":["import React, { useState, useCallback } from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst AddCategory = ({ setcategories }) => {\n  const [inputValue, setInputValue] = useState(\"\")\n\n  const handleInputChange = useCallback((e) => {\n    setInputValue(e.target.value)\n  }, [])\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault()\n      setcategories(inputValue)\n      setInputValue(\"\")\n    },\n    [inputValue, setcategories]\n  )\n\n  const shouldButtonBeDisabled = useCallback((text) => {\n    return text === \"\"\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n      <button disabled={shouldButtonBeDisabled(inputValue)} type=\"submit\">\n        Agregar\n      </button>\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setcategories: PropTypes.func.isRequired,\n}\n\nexport default AddCategory\n","import React from \"react\"\n\nconst GifItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n    </div>\n  )\n}\n\nexport default GifItem\n","import axios from \"axios\"\n\nexport const getGifs = (category) => {\n  return axios\n    .get(`${process.env.REACT_APP_SEARCH_URL}${category}`)\n    .then((res) => {\n      let {\n        data: { data },\n      } = res\n      return parseData(data)\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n}\n\nexport const parseData = (array) => {\n  let newArray = array.map(\n    ({\n      id,\n      title,\n      images: {\n        fixed_width_downsampled: { url },\n      },\n    }) => {\n      return {\n        id: id,\n        title: title,\n        url: url,\n      }\n    }\n  )\n\n  return newArray\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGifs(category).then((gifs) => {\n      setTimeout(() => {\n        setState({ data: gifs, loading: false })\n      }, 3000)\n    })\n  }, [category])\n\n  return state\n}\n","import React from \"react\"\nimport GifItem from \"./GifItem\"\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\n\nconst GifGrid = ({ category }) => {\n  const { data: gifs, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3>Resultados para: \"{category}\"</h3>\n      <hr />\n\n      {loading && (\n        <p className=\"animate__animated animate__pulse\">\"Cargando\"</p>\n      )}\n\n      <div className=\"gif-container\">\n        {gifs.map((gif) => {\n          return <GifItem key={gif.id} {...gif} />\n        })}\n      </div>\n      <hr />\n    </>\n  )\n}\n\nexport default GifGrid\n","import React, { useCallback, useState } from \"react\"\nimport AddCategory from \"./components/AddCategory\"\nimport GifGrid from \"./components/GifGrid\"\n\nexport const GifExpertApp = () => {\n  const [categories, setcategories] = useState([])\n\n  const handleAddCategorie = useCallback(\n    (newCat) => {\n      setcategories([newCat, ...categories])\n    },\n    [categories]\n  )\n\n  return (\n    <>\n      <h1>GifExpertApp</h1>\n      <hr />\n      <AddCategory setcategories={handleAddCategorie} />\n      <ul>\n        {categories.map((cat, index) => {\n          return <GifGrid key={cat} category={cat} />\n        })}\n      </ul>\n    </>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { GifExpertApp } from \"./GifExpertApp\"\nimport dotenv from \"dotenv\"\nimport \"./index.css\"\n\ndotenv.config()\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"))\n"],"sourceRoot":""}